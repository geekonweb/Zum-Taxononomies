@model Classifieds.Models.SearchViewModels.CellphonesSearchViewModel
@using PagedList.Mvc
@{
    ViewBag.Title = @Model.Category.Title;
    //Layout = "~/Views/Shared/Layouts/_BrowseCategory.cshtml";
}
@section scripts{
    <script type="text/javascript">
        $(document).ready(function myfunction() {
            $("[rel='tooltip']").tooltip();
        });
    </script>
}
@Html.Partial("_BreadCrumbs", (SortedDictionary<string, int>)ViewBag.crumbs)
<h2>
    <i class="glyphicon glyphicon-globe"></i> @if (Model.Category == null)
    { <span>Browse Listings</span>}
    else
    { <span>@Model.Category.Title</span> }
</h2>
@if (Model.subCategories != null && Model.subCategories.Count() > 0)
{
    <ul class="subcats">
        @foreach (var cat in Model.subCategories)
        {
            <li class="">@Html.ActionLink(cat.Title, "index", "browse", new { cat = cat.CategoryId }, new { })</li>
        }
    </ul>
}
<div class="results_count">
    <span>Found @Model.foundListings.Count() listings </span> @if (!String.IsNullOrEmpty(Model.text))
    { <span>for</span> <em>"@Model.text" .</em>}
    else
    { <span>in this category.</span>}
</div>
<table class="table">
    @using (Html.BeginForm(Model.action, Model.controller, FormMethod.Get, new { }))
    {
        @Html.HiddenFor(model => model.text)
        @Html.HiddenFor(model => model.cat)
        @Html.HiddenFor(model => model.from)
        @Html.HiddenFor(model => model.to)
        @Html.HiddenFor(model => model.location)
        @Html.HiddenFor(model => model.page)
        @Html.HiddenFor(model => model.Brand)
        @Html.HiddenFor(model => model.CModel)
        @Html.HiddenFor(model => model.Condition)
        @Html.HiddenFor(model => model.NetworkType)
        @Html.HiddenFor(model => model.ScreenSize)
        @Html.HiddenFor(model => model.OS)
        <tr>
            <th width="170"></th>
            <th>
                Title
            </th>
            <th width="130">
                <button rel="tooltip" title="Order by location" type="submit" class="btn-link" name="order" value="@Model.lorder">
                    <span>Location</span>
                    @if (Model.lorder == "town")
                    {
                        <i class="glyphicon glyphicon-sort-by-attributes-alt"></i>
                    }
                    else
                    {
                        <i class="glyphicon glyphicon-sort-by-attributes"></i>
                    }
                </button>

            </th>
            <th>
                @Html.DisplayNameFor(model =>model.Brand)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CModel)
            </th>
            <th width="130">
                <button rel="tooltip" title="Order by price" type="submit" class="btn-link" name="order" value="@Model.porder">
                    <span>Price</span>
                    @if (Model.porder == "price")
                    {
                        <i class="glyphicon glyphicon-sort-by-attributes-alt"></i>
                    }
                    else
                    {
                        <i class="glyphicon glyphicon-sort-by-attributes"></i>
                    }
                </button>
            </th>
        </tr>
    }
    @if(Model.foundListings != null && Model.foundListings.Count > 0){
     foreach (var item in Model.foundListings)
    {
        string controller = item.Listing.Category.Controller;
        string src = "";
        if (item.Listing.images != null && item.Listing.images.Count() > 0)
        {

            src = Url.Content("~/Images/Listings/small/" + item.Listing.images.OrderByDescending(c => c.Created).First().Name);
        }

        <tr>
            <td width="170">
                @if (src != "")
                {
                    <a href="@Url.Action("details", "listing", new { id=item.ListingId})"><img width="150" class="img-thumbnail img-responsive" src="@src" /></a>
                }

            </td>
            <td>
                <strong>
                    @Html.ActionLink(item.Listing.Title, "details", "listing", new { id = item.ListingId }, null)
                </strong>
                <br />
                @item.Listing.getIntro()
            </td>
            <td>
                @Html.DisplayFor(mod => item.Listing.Town)
            </td>
            <td>
                @Html.DisplayFor(model => item.Brand)
            </td>
            <td>
                @Html.DisplayFor(model=>item.CModel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Listing.Price)
            </td>
        </tr>
    }
    }
</table>
<hr />
@if (Model.foundListings.PageCount > 1)
{
    <div class="pagination">
        @*Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount*@
        @Html.PagedListPager(Model.foundListings, page => Url.Action("index", new {page, cat=Model.cat,text=Model.text }))
    </div>
}
