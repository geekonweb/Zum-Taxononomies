@model Classifieds.Models.ExternalLoginConfirmationViewModel
@{
    ViewBag.Title = "Create Account";
}
<h2>@ViewBag.Title.</h2>
<h3>Associate your @ViewBag.LoginProvider account.</h3>

@using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <p class="alert alert-info">
        You've successfully authenticated with <strong>@ViewBag.LoginProvider</strong>.
            Please fill in the form below to create an account that you can login in with using <strong>@ViewBag.LoginProvider</strong>.
    </p>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "" })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Alias, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Alias, new { @class = "form-control", rel = "tooltip", title = "Everyone will see this name against your listings." })
            @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.FullName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FullName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ClassifiedsPhone, new { @class = "col-md-2 control-label", rel = "tooltip" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.ClassifiedsPhone, new { @class = "form-control", rel = "tooltip", title = "Everyone will see this number against your listings." })
            @Html.ValidationMessageFor(model => model.ClassifiedsPhone, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Address, new { @class = "col-md-2 control-label", rel = "tooltip" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Address, new { @class = "form-control", rel = "tooltip", title = "This will be displayed to everyone against your listings." })
            @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.Label("I accept the terms and conditions", new { @class = "  control-label" })
            @Html.EditorFor(m => m.Terms, new { @class = "" })
            @Html.ValidationMessageFor(model => model.Terms, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
