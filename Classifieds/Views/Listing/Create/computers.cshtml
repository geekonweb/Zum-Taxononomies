@model Classifieds.Models.CreateViewModels.CreateComputersViewModel

@{
    ViewBag.Title = "Create Listing";
    Layout = "~/Views/Shared/Layouts/_MyAccount.cshtml";
}

<h2> <i class="glyphicon glyphicon-plus"></i> Create new listing in #@Model.Category.Title</h2>
<ol class="breadcrumb">
    <li>@Html.ActionLink("Dashboard", "dashboard", "account")</li>
    <li>@Html.ActionLink("Listings", "index", "listing")</li>
    <li>@Html.ActionLink("Choose category", "choose", "listing")</li>
    @if (ViewBag.crumbs != null)
        {
            foreach (var crumb in ViewBag.crumbs)
            {
                if (Model.Category.Title != crumb.Key)
                {
                  <li>@Html.ActionLink((String)crumb.Key, "choose", "listing", new { c= crumb.Value},null)</li>
                }else
                {
                    <li>@crumb.Key</li>
                }
            }
        }
</ol>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @*@Html.Partial("_CreateListing",Model)*@
        @Html.EditorFor(model => Model)
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.OS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OS,Model.oses, new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.OS, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Brand, Model.brands, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.HddSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 input-group">
                <span class="input-group-addon">Gig</span>
                @Html.EditorFor(model => model.HddSize, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g 500" } })
                @Html.ValidationMessageFor(model => model.HddSize, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Ram, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 input-group">
                <span class="input-group-addon" rel="tooltip" title="Litres">Gig</span>
                @Html.EditorFor(model => model.Ram, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g 4" } })
                @Html.ValidationMessageFor(model => model.Ram, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group ">
            @Html.LabelFor(model => model.ScreenSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 input-group">
                <span class="input-group-addon">''</span>
                @Html.EditorFor(model => model.ScreenSize, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g 15" } })
                @Html.ValidationMessageFor(model => model.ScreenSize, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group ">
            @Html.LabelFor(model => model.Processor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 ">
                @Html.EditorFor(model => model.Processor, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g Intel core i7" } })
                @Html.ValidationMessageFor(model => model.Processor, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Condition, Model.conditions, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Condition, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
